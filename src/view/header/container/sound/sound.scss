$toggle-indicator-size: 24px; // changing this number will resize the whole toggle$track-height: $toggle-indicator-size + 6;$track-width: $toggle-indicator-size * 2.5;$highContrastModeSupport: solid 2px transparent;$light: #F27922;$mid: #26cddd;$dark: white;$track-border: $mid;$track-background: $light;$focus-ring: 0px 0px 0px 1px $dark;.header__checkbox {  margin-left: 20px;  flex: 0 auto;  display: flex;  justify-content: end;}// Toggle specific styles.toggle {  align-items: center;  border-radius: 100px;  display: flex;  font-weight: 700;  margin-bottom: 16px;  &:last-of-type {    margin: 0;  }}// Since we can't style the checkbox directly, we "hide" it so we can draw the toggle..toggle__input {  clip: rect(0 0 0 0);  clip-path: inset(50%);  height: 1px;  overflow: hidden;  position: absolute;  white-space: nowrap;  width: 1px;  // This style sets the focus ring. The ":not([disabled])" prevents the focus ring from creating a flash when the element is clicked.  //&:not([disabled]):active + .toggle-track,  //&:not([disabled]):focus + .toggle-track {  //  //border: 1px solid transparent;  //  box-shadow: $focus-ring;  //}  &:disabled + .toggle-track {    cursor: not-allowed;    opacity: 0.7;  }}.toggle-track {  background: $track-background;  border: 1px solid $track-border;  border-radius: 100px;  cursor: pointer;  display: flex;  height: $track-height;  position: relative;  width: $track-width;  box-shadow: $focus-ring;}.toggle-indicator {  align-items: center;  background: $dark;  border-radius: $toggle-indicator-size;  bottom: 2px;  display: flex;  height: $toggle-indicator-size;  justify-content: center;  left: 2px;  outline: $highContrastModeSupport;  position: absolute;  transition: 0.3s;  width: $toggle-indicator-size;}.checkMark {  height: $toggle-indicator-size - 4;  width: $toggle-indicator-size - 4;  img {    width: 100%;    height: 100%;  }}.toggle__input:checked + .toggle-track .toggle-indicator {  background: $dark;  transform: translateX($track-width - $track-height);}